akka {

	log-config-on-start = off
	
	default-timeout = 30000
	timeouts {
	    default-timeout = 30000
	}

	web.host = localhost
	web.port = 8080
	
	tooe {
	  circuit-breaker {
	     timeout = 30 seconds
	  }
	  
	  # profile: tooe-full | tooe-core | tooe-graph | tooe-migration | tooe-migration-core
    # initgraphservice: false | true
    # clustering: false | true
	  deployer {
	    profile = "tooe-full"
	    initgraphservice = true
	    clustering = false
      withIntegrationService = false
    }
	}

	extensions = ["com.tooe.extensions.scala.Settings"]

	# Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
    # to STDOUT)
    #loggers = ["akka.event.slf4j.Slf4jLogger"]

    # Log level used by the configured loggers (see "loggers") as soon
    # as they have been started; before that, see "stdout-loglevel"
    # Options: ERROR, WARNING, INFO, DEBUG
    loglevel = INFO

    # Log level for the very basic logger activated during AkkaApplication startup
    # Options: ERROR, WARNING, INFO, DEBUG
    stdout-loglevel = INFO

  actor {
    debug {
      event-stream = on
      receive = on
      lifecycle = on
    }

    default-dispatcher {
      type = "Dispatcher"

      executor = "fork-join-executor"

      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 15.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64
      }

      throughput = 1

      attempt-teamwork = on

    }
  }  
}

spring {
    applicationContextPath = "classpath*:/META-INF/spring/applicationContext.xml"
}

session {
    timestamp-expires-in-sec = 300
}

security{
    write-requests-per-minute = 8
    tooe-dsign-header-name = "TOOEDSIGN"
    tooe-dsign-password = "zxt93vnswUJ4HNX4EHEHVXKULaeHqfvr"
}

photo-upload{
    aggregate-uploaded-photo-time-interval = 5m
}

geo-search {
    checkins-search {
        # default search radius in meters
        radius-meters = 4000
    }

    locations-search {
        radius.max = 3000
        friends.count = 5000
        result.count = 5000
    }
    locations-for-checkin-search {
        radius.max = 500
    }
}


