spray {
  can.server {
    
    http {
        start = on
        host = "0.0.0.0"
        port = 9888
    }
    https{
    		start = off
        host = localhost
        port = 9443
    }

    # the time after which an idle connection will be automatically closed
    # Set to zero to completely disable idle connection timeouts.
    idle-timeout = 121 s

    # If a request hasn't been responded to after the time period set here
    # a spray.http.Timeout message will be sent to the timeout handler.
    # Set to zero to completely disable request timeouts.
    request-timeout = 120 s

    # After a Timeout message has been sent to the timeout handler and the
    # request still hasn't been completed after the time period set here
    # the server will complete the request itself with an error response.
    # Set to zero to disable timeout timeouts.
    timeout-timeout = 500 ms

    ssl-encryption = off
  }

  io {
    confirm-sends = on
    parallelism = 8
  }

  servlet {

      # The FQN (Fully Qualified Name) of the class to load when the
      # servlet context is initialized (e.g. "com.example.ApiBoot")
      # The class must have a default constructor and implement
      # the ``spray.servlet.WebBoot`` trait.
      boot-class = "com.tooe.web.boot.SprayServletBoot"

      # Enables/disables SSL encryption
      # If enabled the server uses the implicit ServerSSLEngineProvider parameter of the
      # server actor constructor to create SSLEngines for the underlying IO connection
      ssl-encryption = on

      # Time period in which all spray routes must complete their requests,
      # otherwise the actor configured as timeout actor receives a Timeout message
      request-timeout = 30s

      # After a Timeout message has been sent to the timeout handler and the
      # request still hasn't been completed after the time period set here
      # it will be completed automatically with an error response.
      timeout-timeout = 500 ms

      # A path prefix that is automatically "consumed" before being dispatched
      # to the HTTP service routes,
      # can be used to match servlet context paths configured for the application
      root-path = ""

      # the path of the actor to send spray.http.Timeout messages to
      # If empty all Timeout messages will go to the "regular" request handling actor.
      timeout-handler = ""

      # Enables/disables the adding of a `Remote-Address` header
      # holding the clients (remote) IP address.
      remote-address-header = off

      # Enables/disables the returning of more detailed error messages to
      # the client in the error response
      # Should be disabled for browser-facing APIs due to the risk of XSS attacks
      # and (probably) enabled for internal or non-browser APIs
      # (Note that spray will always produce log messages containing the full error details)
      verbose-error-messages = off

      # The maximum size of the request entity that is still accepted by the server.
      # Requests with a greater entity length are rejected with an error response.
      # Must be greater than zero.
      max-content-length = 5 m
  }
}

jetty {
  server{
    context-path = /
    connector-servlet-path = "/*"
    war-path = target/tooe-0.0.1-SNAPSHOT.jar
    
    http {
        start = off
        host = localhost
        port = 8888
    }
    https{
        start = off
        host = localhost
        port = 8443
    }
  }
}

ssl.key.store {
  path = target/classes/jettyKeyStore
  password = tooejetty
}

api {
    core-routes-enable = true
    test-core-routes-enable = false
    test-graph-routes-enable = false
    migration-routes-enable = true
    correction-routes-enable = false
    allowed-versions = [v01,v02,v03]
}